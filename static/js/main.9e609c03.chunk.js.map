{"version":3,"sources":["utils/validate.js","utils/renderField.js","components/PrimaryDetailsForm.jsx","components/ContactDetailsForm.jsx","components/DetailsPreviewForm.jsx","Store/Action/actionCreator.js","Store/Action/actionTypes.js","Store/StoreAPI/empRegApi.js","Loader/Loader.jsx","components/EmployeeBasicDetails.jsx","layout/DefaultLayout.jsx","App.js","serviceWorker.js","Store/Reducer/empRegReducer.js","Store/Reducer/rootReducer.js","index.js"],"names":["validate","values","errors","firstName","lastName","email","test","mobileNum","sex","age","Number","acknowledgement","renderField","input","label","type","meta","touched","error","className","placeholder","renderError","reduxForm","form","forceUnregisterOnUnmount","destroyOnUnmount","props","handleSubmit","onSubmit","Field","name","component","placeHolder","value","previousPage","onClick","getFormValues","disabled","htmlFor","id","loaderActionCreator","isLoading","getEmpActionCreator","dispatch","getState","empId","fetch","method","headers","then","response","json","data","status","catch","err","empData","validEmp","Promise","resolve","reject","console","log","Loader","state","show","this","setState","hidden","Spinner","style","width","height","zIndex","position","left","top","color","React","Component","EmployeeBasicDetails","enterEmpId","e","persist","debouncedFn","debounce","target","validateEmpId","nextPage","bind","showSubmittedDetails","pageNo","isValidated","allSettled","Fragment","onChange","connect","reducerReturn","DefaultLayout","applicationRoute","schema","getComponents","forEach","comp","PrimaryDetailsForm","DetailsPreviewForm","ContactDetailsForm","redirect","to","map","prop","key","from","path","App","Boolean","window","location","hostname","match","initState","empDetailsReducer","action","rootReducer","combineReducers","formReducer","empRegReducer","store","createStore","applyMiddleware","thunk","next","group","info","result","groupEnd","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.9e609c03.chunk.js","sourcesContent":["const validate = values => {\r\n    const errors = {}\r\n    if (!values.firstName) {\r\n      errors.firstName = 'Required'\r\n    }\r\n    if (!values.lastName) {\r\n      errors.lastName = 'Required'\r\n    }\r\n    if (!values.email) {\r\n      errors.email = 'Required'\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n      errors.email = 'Invalid email address'\r\n    }\r\n    if (!values.mobileNum) {\r\n      errors.mobileNum = 'Required'\r\n    } else if (!/^([6-9]\\d{9})$/.test(values.mobileNum)) {\r\n      errors.mobileNum = 'Invalid mobile number, must be 10 digits[Starts with 6-9]'\r\n    }\r\n    if (!values.sex) {\r\n      errors.sex = 'Required'\r\n    }\r\n    if (!values.age) {\r\n      errors.age = 'Required'\r\n    }\r\n    else if(Number(values.age) < 18 || Number(values.age) > 60){\r\n      errors.age = 'Valid Age criteria is 18-60 years'\r\n    }\r\n    if (!values.acknowledgement) {\r\n      errors.acknowledgement   = 'Please accept the declaration'\r\n    }\r\n    return errors\r\n  }\r\n  \r\n  export default validate\r\n  ","import React from 'react'\r\n\r\nconst renderField = ({ input, label, type, meta: { touched, error } }) => (\r\n    <div className='col-md-12 row text-center'>\r\n        <label className='col-md-3 font-weight-bold'>{label}:</label>\r\n        <input className='col-md-6 mb-3' {...input} placeholder={label} type={type} />\r\n        {touched && error && <span className='danger'>{`*${error}`}</span>}\r\n    </div>\r\n)\r\n\r\nexport default renderField\r\n","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport validate from '../utils/validate'\r\nimport renderField from '../utils/renderField'\r\nconst renderError = ({ meta: { touched, error } }) =>\r\n  touched && error ? <span className='danger'>{`*${error}`}</span> : false\r\nconst PrimaryDetailsForm = props => {\r\n  const { handleSubmit } = props\r\n  return (\r\n    <div className='container-fluid container-margin'>\r\n      <h4>Employee Primary Details</h4>\r\n      <form onSubmit={handleSubmit}>\r\n        <Field\r\n          name=\"firstName\"\r\n          type=\"text\"\r\n          component={renderField}\r\n          label=\"First Name\"\r\n\r\n        />\r\n        <Field\r\n          name=\"lastName\"\r\n          type=\"text\"\r\n          component={renderField}\r\n          label=\"Last Name\"\r\n        />\r\n        <Field\r\n          name=\"age\"\r\n          type=\"number\"\r\n          component={renderField}\r\n          label=\"Age\"\r\n          placeHolder=\"Enter Age\"\r\n        />\r\n\r\n        <div className='col-md-12 row'>\r\n          <label className='col-md-3'><strong>Gender:</strong></label>\r\n          <div>\r\n            <label>\r\n              <Field\r\n                name=\"sex\"\r\n                component=\"input\"\r\n                type=\"radio\"\r\n                value=\"male\"\r\n              />{' '}\r\n                                        Male\r\n                                            </label>\r\n            <label>\r\n              <Field\r\n                name=\"sex\"\r\n                component=\"input\"\r\n                type=\"radio\"\r\n                value=\"female\"\r\n              />{' '}\r\n                                                Female\r\n                                </label>\r\n            <Field name=\"sex\" component={renderError} />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div className=\"col-sm-12\">\r\n            <ul\r\n              className=\"form-group row float-sm-right\"\r\n            >\r\n              <li className=\"next\">\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                  Next\r\n        </button>\r\n              </li>\r\n            </ul>\r\n\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default reduxForm({\r\n  form: 'EmployeeBasicDetails',\r\n  forceUnregisterOnUnmount: true,\r\n  destroyOnUnmount: false,\r\n  validate\r\n})(PrimaryDetailsForm)","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport validate from '../utils/validate'\r\nimport renderField from '../utils/renderField'\r\n\r\n\r\n\r\nconst ContactDetailsForm = props => {\r\n    const { handleSubmit, previousPage } = props\r\n    return (\r\n        <div className='container container-margin'>\r\n            <h4>Contact Details</h4>\r\n            <form onSubmit={handleSubmit}>\r\n                <Field name=\"email\" type=\"email\" component={renderField} label=\"Email\"/>\r\n                <Field\r\n                  name=\"mobileNum\"\r\n                  type=\"text\"\r\n                  component={renderField}\r\n                  label=\"Mobile No\"\r\n                  placeHolder=\"Enter Mobile Number\"\r\n                />\r\n\r\n                <div className=\"col-sm-12\">\r\n                    <ul\r\n                        className=\"form-group row float-sm-right\"\r\n                    >\r\n                        <li className=\"previous\">\r\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={previousPage}>\r\n                        Previous\r\n        </button>\r\n                        </li>\r\n                        <li className=\"next\">\r\n                        <button type=\"submit\" className=\"btn btn-primary\">\r\n                        Next/Preview\r\n        </button>\r\n                        </li>\r\n                    </ul>\r\n\r\n                </div>\r\n                {/* <div>\r\n                    <button type=\"button\" className=\"btn btn-secondary\" onClick={previousPage}>\r\n                        Previous\r\n        </button>\r\n                    <button type=\"submit\" className=\"btn btn-primary\">\r\n                        Next\r\n        </button>\r\n                </div> */}\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'EmployeeBasicDetails', \r\n    forceUnregisterOnUnmount: true,\r\n    destroyOnUnmount: false,\r\n    validate\r\n})(ContactDetailsForm)\r\n","import React from 'react'\r\nimport { Field, reduxForm, formValueSelector, getFormValues } from 'redux-form'\r\nimport validate from '../utils/validate'\r\nimport renderField from '../utils/renderField'\r\n\r\n// const selector = formValueSelector('EmployeeBasicDetails')\r\n// const values = selector(state, 'firstName', 'lastName', 'email','sex')\r\n const values = getFormValues('EmployeeBasicDetails');\r\n const renderError = ({ meta: { touched, error } }) =>\r\n  touched && error ? <span className='danger'>{`*${error}`}</span> : false\r\nconst DetailsPreviewForm = props => {\r\n  const { onSubmit, handleSubmit, previousPage } = props\r\n  return (\r\n    <div className='container container-margin'>\r\n      <h4>Preview Details</h4>\r\n      <form onSubmit={handleSubmit}>\r\n          <div className='col-md-12 row'>\r\n              <label className='col-md-3 font-weight-bold'>First Name:</label>\r\n              <Field className='col-md-9' disabled name=\"firstName\" component='input' />\r\n          </div>\r\n          <div className='col-md-12 row'>\r\n              <label className='col-md-3 font-weight-bold'>Last Name:</label>\r\n              <Field className='col-md-9' disabled name=\"lastName\" component='input' />\r\n          </div>\r\n          <div className='col-md-12 row'>\r\n              <label className='col-md-3 font-weight-bold'>Age:</label>\r\n              <Field className='col-md-9'  disabled name=\"age\" component='input' />\r\n          </div>\r\n          <div className='col-md-12 row'>\r\n              <label className='col-md-3 font-weight-bold'>Gender:</label>\r\n              <Field className='col-md-9' disabled name=\"sex\" component='input' />\r\n          </div>\r\n          <div className='col-md-12 row'>\r\n              <label className='col-md-3 font-weight-bold'>Email:</label>\r\n              <Field className='col-md-9' disabled name=\"email\" component='input' />\r\n          </div>\r\n          <div className='col-md-12 row'>\r\n              <label className='col-md-3 font-weight-bold'>Mobile No:</label>\r\n              <Field className='col-md-9' disabled name=\"mobileNum\" component='input' />\r\n          </div>\r\n\r\n        <div className='col-md-12 container-margin'>\r\n          <label htmlFor=\"employed\">\r\n            <Field\r\n              name=\"acknowledgement\"\r\n              id=\"acknowledgement\"\r\n              component=\"input\"\r\n              type=\"checkbox\"\r\n            />&nbsp;\r\n            <strong>Acknowledgement:</strong>&nbsp;&nbsp;Please confirm above entered details are correct.\r\n                                            </label>\r\n                                            <Field name=\"acknowledgement\" component={renderError} />\r\n        </div>\r\n        <div className=\"col-sm-12\">\r\n          <ul\r\n            className=\"form-group row float-sm-right\"\r\n          >\r\n            <li className=\"previous\">\r\n              <button type=\"button\" className=\"btn btn-secondary\" onClick={previousPage}>\r\n                Previous\r\n        </button>\r\n            </li>\r\n            <li className=\"next\">\r\n              <button type=\"submit\" className=\"btn btn-primary\">\r\n                Submit Details\r\n        </button>\r\n            </li>\r\n          </ul>\r\n\r\n        </div>\r\n\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\nexport default reduxForm({\r\n  form: 'EmployeeBasicDetails',\r\n  destroyOnUnmount: false,\r\n  forceUnregisterOnUnmount: true,\r\n  validate\r\n})(DetailsPreviewForm)","import {getEmpDetails} from './../StoreAPI/empRegApi';\r\nimport {GET_EMP_DETAILS,ERROR_FETCH,LOADER_ACTION_TYPE} from './actionTypes';\r\n\r\nconst loaderActionCreator = (isLoading) => {\r\n    return {\r\n        type: LOADER_ACTION_TYPE,\r\n        isLoading: isLoading\r\n    };\r\n};\r\n\r\nexport const getEmpActionCreator = (id) => {\r\n    return (dispatch, getState) => {\r\n        dispatch(loaderActionCreator(true));\r\n        return getEmpDetails(id)\r\n            .then((data) => {\r\n                if(data.status === 200){\r\n                    dispatch(loaderActionCreator(false))\r\n                    dispatch({ type: GET_EMP_DETAILS, empData: data.data,validEmp:true})\r\n                    return Promise.resolve()\r\n                }\r\n                else if(data.status >= 400){\r\n                    dispatch(loaderActionCreator(false))\r\n                    dispatch({ type: ERROR_FETCH, empData: {} ,validEmp:false})\r\n                    return Promise.reject()\r\n                }\r\n            },\r\n            error =>{\r\n                console.log(error,'error')\r\n                dispatch({ type: ERROR_FETCH, empData: {},validEmp:false })\r\n                return Promise.reject()\r\n            }\r\n        )\r\n            .catch(err => {throw err})\r\n    }\r\n}","export const GET_EMP_DETAILS = 'GET_EMP_DETAILS';\r\nexport const ERROR_FETCH = 'ERROR_FETCH';\r\nexport const LOADER_ACTION_TYPE = 'LOADER_ACTION_TYPE';","\r\n\r\nexport const getEmpDetails = (empId) => {\r\n    \r\n    return fetch(`https://jsonplaceholder.typicode.com/users/${empId}`, {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n    })\r\n    .then(response => response.json().then(data =>({\r\n        status:response.status,\r\n        data\r\n    })))\r\n        .catch(err => {throw err})\r\n}","import React from 'react';\r\nimport { Spinner } from 'reactstrap';\r\n\r\nclass Loader extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tshow:false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tif(this.props.show){\r\n\t\t\tthis.setState({show:this.props.show})\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\treturn (\r\n\t\t\t<div hidden={(this.props.show)?false:true}>\r\n\t\t\t\t<Spinner style={{ width: '3rem', height: '3rem',zIndex: '1000',position: 'absolute',left: '47%',top: '35%'}}  color=\"primary\" />\r\n\t\t\t\t<div className=\"custom-backdrop\"></div>\r\n\t\t   </div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Loader;\r\n","import { reduxForm, Field } from 'redux-form';\r\nimport React from 'react';\r\nimport PrimaryDetailsForm from './PrimaryDetailsForm';\r\nimport ContactDetailsForm from './ContactDetailsForm';\r\nimport DetailsPreviewForm from './DetailsPreviewForm';\r\nimport {getEmpActionCreator} from './../Store/Action/actionCreator';\r\nimport { connect } from 'react-redux';\r\nimport { debounce } from 'lodash'\r\nimport Loader from './../Loader/Loader'\r\nclass EmployeeBasicDetails extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.nextPage = this.nextPage.bind(this)\r\n        this.previousPage = this.previousPage.bind(this)\r\n        this.showSubmittedDetails = this.showSubmittedDetails.bind(this);\r\n        this.validateEmpId = this.validateEmpId.bind(this);\r\n\r\n        this.state = {\r\n            pageNo: 1,\r\n            empId: '',\r\n            isValidated: false\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        \r\n        //console.log(this.props && this.props.reducerReturn && this.props.reducerReturn.empData,'reducerReturn.empData')\r\n    }\r\n    nextPage() {\r\n        this.setState({ pageNo: this.state.pageNo + 1 })\r\n    }\r\n\r\n    previousPage() {\r\n        this.setState({ pageNo: this.state.pageNo - 1 })\r\n    }\r\n    showSubmittedDetails(){\r\n        console.log(this.props,'props')\r\n    }\r\n    enterEmpId = (e) => {\r\n        e.persist();\r\n        \r\n        if (!this.debouncedFn) {\r\n          this.debouncedFn =  debounce(() => {\r\n            this.setState({empId: e.target.value})\r\n             let empId = e.target.value;\r\n             this.validateEmpId(empId)\r\n          }, 500);\r\n        }\r\n        this.debouncedFn();\r\n    }\r\n    async validateEmpId(empId){\r\n        if(empId !== ''){\r\n            await Promise.allSettled([this.props.getEmpActionCreator(empId)]).then((data) => {\r\n                this.setState({isValidated:true});\r\n            })\r\n        }\r\n        else{\r\n            this.setState({isValidated:false})\r\n        }\r\n        \r\n    }\r\n    render() {\r\n        const { pageNo,empId,isValidated } = this.state;\r\n        return (\r\n            <React.Fragment>\r\n                <Loader show={this.props.isLoading}/>\r\n                <div className='container-fluid container-margin'>\r\n                <div className=\"card\">\r\n                <div className=\"card-body\">\r\n\r\n                <div className='col-md-12 text-center'>\r\n                    <label htmlFor='empId' className='col-md-3 font-weight-bold' >Employee ID:</label>\r\n                    <input name='empId' className='col-md-3' disabled={pageNo === 1 ? false : true} placeholder='Enter User ID' onChange={(e)=>{this.enterEmpId(e)}}/>\r\n                    {\r\n                        isValidated && <span> {this.props.validEmp ? <i className='fa fa-check-circle col-md-3'>&nbsp;Valid Enployee</i>: <i className='fa fa-times-circle col-md-3'>&nbsp;Sorry, Inalid Enployee ID entered!</i>}</span>\r\n                    }<br/>\r\n                    <small ><strong>Tip:</strong> Valid Employee ID is in range of 1-10</small>\r\n\r\n                </div>\r\n                <div>\r\n                    {pageNo === 1 && empId !== '' && this.props.validEmp && <PrimaryDetailsForm onSubmit={this.nextPage} />}\r\n                    {pageNo === 2 && (\r\n                        <ContactDetailsForm\r\n                            previousPage={this.previousPage}\r\n                            onSubmit={this.nextPage}\r\n                        />\r\n                    )}\r\n                    {pageNo === 3 && (\r\n                        <DetailsPreviewForm\r\n                            previousPage={this.previousPage}\r\n                            onSubmit={this.showSubmittedDetails}\r\n                        />\r\n                    )}\r\n                </div>\r\n                </div>\r\n                </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n\tconsole.log(state.reducerReturn.empData,\"state.reducerReturn.empData\")\r\n\treturn {\r\n        empData: state.reducerReturn.empData,\r\n        validEmp: state.reducerReturn.validEmp,\r\n        isLoading: state.reducerReturn.isLoading\r\n\t }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\t\tgetEmpActionCreator: (id) => dispatch(getEmpActionCreator(id))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EmployeeBasicDetails);","import React from 'react';\r\nimport schema from '../applicationSchema.json';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\n\r\nimport EmployeeBasicDetails from '../components/EmployeeBasicDetails';\r\nimport PrimaryDetailsForm from '../components/PrimaryDetailsForm';\r\nimport DetailsPreviewForm from '../components/DetailsPreviewForm';\r\n\r\nimport ContactDetailsForm from '../components/ContactDetailsForm';\r\nexport default class DefaultLayout extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            applicationRoute: schema.applicationRoute\r\n        }\r\n        this.getComponents = this.getComponents.bind(this);\r\n    }\r\n    getComponents() {\r\n        var { applicationRoute } = this.state;\r\n\r\n        applicationRoute.forEach(comp => {\r\n            if (comp.name === \"Employee Basic Details\") {\r\n                comp.component = EmployeeBasicDetails\r\n            }\r\n            else if (comp.name === \"Employee Primary Details\") {\r\n                comp.component = PrimaryDetailsForm\r\n            }\r\n            else if (comp.name === \"Details Preview\") {\r\n                comp.component = DetailsPreviewForm\r\n            }\r\n            else if (comp.name === \"Contact Details\") {\r\n                comp.component = ContactDetailsForm\r\n            }\r\n            else if (comp.redirect) {\r\n                comp.to = \"/dashboard\"\r\n            }\r\n        });\r\n\r\n        this.setState({ applicationRoute: applicationRoute });\r\n    }\r\n    componentDidMount() {\r\n        this.getComponents()\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Switch>\r\n                    {this.state.applicationRoute.map((prop, key) => {\r\n                        if (prop.redirect)\r\n                            return <Redirect from={prop.path} to={prop.to} key={key} />;\r\n                        return <Route path={prop.path} component={prop.component} key={key} />\r\n                    })}\r\n                </Switch>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport { Route, Switch, BrowserRouter } from 'react-router-dom';\nimport './App.css';\nimport EmployeeBasicDetails from './components/EmployeeBasicDetails';\nimport DefaultLayout from './layout/DefaultLayout'\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n      <nav className=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\">\n      <div className='navbar-brand'>\n          <h4>Employee Registration Form</h4>\n        </div>\n      </nav>\n      <BrowserRouter>\n      <Switch>\n\t\t\t\t\t<Route path=\"/\" name=\"Home\" component={DefaultLayout} />\n\t\t\t\t</Switch>\n        </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {GET_EMP_DETAILS,ERROR_FETCH,LOADER_ACTION_TYPE} from './../Action/actionTypes'\r\n\r\nconst initState = {\r\n    empData: {},\r\n}\r\nconst empDetailsReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case GET_EMP_DETAILS:\r\n        return state =  {\r\n            ...state,\r\n            empData : action.empData,\r\n            validEmp: action.validEmp,\r\n        }\r\n        case ERROR_FETCH:\r\n        return state =  {\r\n            ...state,\r\n            empData : action.empData,\r\n            validEmp: action.validEmp,\r\n        }\r\n        case LOADER_ACTION_TYPE:\r\n        return state =  {\r\n            ...state,\r\n            isLoading: action.isLoading\r\n        }\r\n        \r\n\r\n    default:\r\n        return state\r\n    }\r\n}\r\n\r\nexport default empDetailsReducer;","import { combineReducers } from 'redux'\r\n\r\nimport empRegReducer from './empRegReducer';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nconst rootReducer = combineReducers({\r\n    form: formReducer,\r\n    reducerReturn: empRegReducer,\r\n})\r\n\r\nexport default rootReducer;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore, combineReducers,applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport rootReducer from './Store/Reducer/rootReducer';\nimport thunk from 'redux-thunk';\n\nconst logger = store => next => action => {\n  console.group(action.type)\n  console.info('dispatching', action)\n  let result = next(action)\n  console.log('next state', store.getState())\n  console.groupEnd()\n  return result\n}\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunk,logger)\n  );\n\nReactDOM.render(\n  <BrowserRouter>\n\t\t<Provider store={store}><App /></Provider>\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}