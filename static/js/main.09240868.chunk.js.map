{"version":3,"sources":["utils/validate.js","utils/renderField.js","components/PrimaryDetailsForm.jsx","components/ContactDetailsForm.jsx","components/DetailsPreviewForm.jsx","components/EmployeeBasicDetails.jsx","layout/DefaultLayout.jsx","App.js","serviceWorker.js","index.js"],"names":["validate","values","errors","firstName","lastName","email","test","mobileNum","sex","age","acknowledgement","renderField","input","label","type","meta","touched","error","className","placeholder","renderError","reduxForm","form","forceUnregisterOnUnmount","destroyOnUnmount","props","handleSubmit","onSubmit","Field","name","component","placeHolder","value","previousPage","onClick","getFormValues","disabled","htmlFor","id","EmployeeBasicDetails","nextPage","bind","showSubmittedDetails","state","pageNo","this","setState","console","log","Fragment","React","Component","DefaultLayout","applicationRoute","schema","getComponents","forEach","comp","PrimaryDetailsForm","DetailsPreviewForm","ContactDetailsForm","redirect","to","map","prop","key","from","path","App","Boolean","window","location","hostname","match","rootReducer","combineReducers","formReducer","store","createStore","applyMiddleware","next","action","group","info","result","getState","groupEnd","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.09240868.chunk.js","sourcesContent":["const validate = values => {\r\n    const errors = {}\r\n    if (!values.firstName) {\r\n      errors.firstName = 'Required'\r\n    }\r\n    if (!values.lastName) {\r\n      errors.lastName = 'Required'\r\n    }\r\n    if (!values.email) {\r\n      errors.email = 'Required'\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n      errors.email = 'Invalid email address'\r\n    }\r\n    if (!values.mobileNum) {\r\n      errors.mobileNum = 'Required'\r\n    } else if (!/^([6-9]\\d{9})$/.test(values.mobileNum)) {\r\n      errors.mobileNum = 'Invalid mobile number, must be 10 digits[Starts with 6-9]'\r\n    }\r\n    if (!values.sex) {\r\n      errors.sex = 'Required'\r\n    }\r\n    if (!values.age) {\r\n      errors.age   = 'Required'\r\n    }\r\n    if (!values.acknowledgement) {\r\n      errors.acknowledgement   = 'Please accept the declaration'\r\n    }\r\n    return errors\r\n  }\r\n  \r\n  export default validate\r\n  ","import React from 'react'\r\n\r\nconst renderField = ({ input, label, type, meta: { touched, error } }) => (\r\n    <div className='row'>\r\n        <div className='col-md-3'>\r\n            <strong><label>{label}:</label></strong>\r\n        </div>\r\n        <div className='col-md-9'>\r\n            <div>\r\n                <input {...input} placeholder={label} type={type}/>\r\n                {touched && error && <span className='danger'>{`*${error}`}</span>}\r\n            </div>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default renderField\r\n","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport validate from '../utils/validate'\r\nimport renderField from '../utils/renderField'\r\nconst renderError = ({ meta: { touched, error } }) =>\r\n  touched && error ? <span className='danger'>{`*${error}`}</span> : false\r\nconst PrimaryDetailsForm = props => {\r\n  const { handleSubmit } = props\r\n  return (\r\n    <div className='container container-margin'>\r\n      <h4>Employee Primary Details</h4>\r\n      <form onSubmit={handleSubmit}>\r\n        <Field\r\n          name=\"firstName\"\r\n          type=\"text\"\r\n          component={renderField}\r\n          label=\"First Name\"\r\n\r\n        />\r\n        <Field\r\n          name=\"lastName\"\r\n          type=\"text\"\r\n          component={renderField}\r\n          label=\"Last Name\"\r\n        />\r\n        <Field\r\n          name=\"age\"\r\n          type=\"text\"\r\n          component={renderField}\r\n          label=\"Age\"\r\n          placeHolder=\"Enter Age\"\r\n        />\r\n\r\n        <div className='col-md-12 row'>\r\n          <label className='col-md-3'><strong>Sex:</strong></label>\r\n          <div className='col-md-9'>\r\n            <label>\r\n              <Field\r\n                name=\"sex\"\r\n                component=\"input\"\r\n                type=\"radio\"\r\n                value=\"male\"\r\n              />{' '}\r\n                                        Male\r\n                                            </label>\r\n            <label>\r\n              <Field\r\n                name=\"sex\"\r\n                component=\"input\"\r\n                type=\"radio\"\r\n                value=\"female\"\r\n              />{' '}\r\n                                                Female\r\n                                </label>\r\n            <Field name=\"sex\" component={renderError} />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div className=\"col-sm-12\">\r\n            <ul\r\n              className=\"form-group row float-sm-right\"\r\n            >\r\n              <li className=\"next\">\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                  Next\r\n        </button>\r\n              </li>\r\n            </ul>\r\n\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default reduxForm({\r\n  form: 'EmployeeBasicDetails',\r\n  forceUnregisterOnUnmount: true,\r\n  destroyOnUnmount: false,\r\n  validate\r\n})(PrimaryDetailsForm)","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport validate from '../utils/validate'\r\nimport renderField from '../utils/renderField'\r\n\r\n\r\n\r\nconst ContactDetailsForm = props => {\r\n    const { handleSubmit, previousPage } = props\r\n    return (\r\n        <div className='container container-margin'>\r\n            <h4>Contact Details</h4>\r\n            <form onSubmit={handleSubmit}>\r\n                <Field name=\"email\" type=\"email\" component={renderField} label=\"Email\"/>\r\n                <Field\r\n                  name=\"mobileNum\"\r\n                  type=\"text\"\r\n                  component={renderField}\r\n                  label=\"Mobile No\"\r\n                  placeHolder=\"Enter Mobile Number\"\r\n                />\r\n\r\n                <div className=\"col-sm-12\">\r\n                    <ul\r\n                        className=\"form-group row float-sm-right\"\r\n                    >\r\n                        <li className=\"previous\">\r\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={previousPage}>\r\n                        Previous\r\n        </button>\r\n                        </li>\r\n                        <li className=\"next\">\r\n                        <button type=\"submit\" className=\"btn btn-primary\">\r\n                        Next/Preview\r\n        </button>\r\n                        </li>\r\n                    </ul>\r\n\r\n                </div>\r\n                {/* <div>\r\n                    <button type=\"button\" className=\"btn btn-secondary\" onClick={previousPage}>\r\n                        Previous\r\n        </button>\r\n                    <button type=\"submit\" className=\"btn btn-primary\">\r\n                        Next\r\n        </button>\r\n                </div> */}\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'EmployeeBasicDetails', \r\n    forceUnregisterOnUnmount: true,\r\n    destroyOnUnmount: false,\r\n    validate\r\n})(ContactDetailsForm)\r\n","import React from 'react'\r\nimport { Field, reduxForm, formValueSelector, getFormValues } from 'redux-form'\r\nimport validate from '../utils/validate'\r\nimport renderField from '../utils/renderField'\r\n\r\n// const selector = formValueSelector('EmployeeBasicDetails')\r\n// const values = selector(state, 'firstName', 'lastName', 'email','sex')\r\n const values = getFormValues('EmployeeBasicDetails');\r\n const renderError = ({ meta: { touched, error } }) =>\r\n  touched && error ? <span className='danger'>{`*${error}`}</span> : false\r\nconst DetailsPreviewForm = props => {\r\n  const { onSubmit, handleSubmit, previousPage } = props\r\n  return (\r\n    <div className='container container-margin'>\r\n      <h4>Preview Details</h4>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <div className='row'>\r\n            <div className='col-md-3'>\r\n              <label><strong>First Name:</strong></label>\r\n            </div>\r\n            <div className='col-md-9'>\r\n              <Field className='preview' disabled name=\"firstName\" component='input' />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='col-md-3'>\r\n            <label><strong>Last Name:</strong></label>\r\n          </div>\r\n          <div className='col-md-9'>\r\n            <Field className='preview' className='preview' disabled name=\"lastName\" component='input'/>\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='col-md-3'>\r\n            <label><strong>Sex:</strong></label>\r\n          </div>\r\n          <div className='col-md-9' >\r\n            <Field className='preview' disabled name=\"sex\" component='input' />\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='col-md-3'>\r\n            <label><strong>Email:</strong></label>\r\n          </div>\r\n          <div className='col-md-9' >\r\n            <Field className='preview' disabled name=\"email\" component='input'/>\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='col-md-3'>\r\n            <label><strong>Mobile Number:</strong></label>\r\n          </div>\r\n          <div className='col-md-9' >\r\n            <Field className='preview' disabled name=\"mobileNum\" component='input' />\r\n          </div>\r\n        </div>\r\n\r\n        <div className='row'>\r\n          <div className='col-md-3'>\r\n            <label><strong>Age:</strong></label>\r\n          </div>\r\n          <div className='col-md-9' >\r\n            <Field className='preview' disabled name=\"age\" component='input'/>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='col-md-12 container-margin'>\r\n          <label htmlFor=\"employed\">\r\n            <Field\r\n              name=\"acknowledgement\"\r\n              id=\"acknowledgement\"\r\n              component=\"input\"\r\n              type=\"checkbox\"\r\n            />&nbsp;\r\n            <strong>Acknowledgement:</strong>&nbsp;&nbsp;Please confirm above entered details are correct.\r\n                                            </label>\r\n                                            <Field name=\"acknowledgement\" component={renderError} />\r\n        </div>\r\n        <div className=\"col-sm-12\">\r\n          <ul\r\n            className=\"form-group row float-sm-right\"\r\n          >\r\n            <li className=\"previous\">\r\n              <button type=\"button\" className=\"btn btn-secondary\" onClick={previousPage}>\r\n                Previous\r\n        </button>\r\n            </li>\r\n            <li className=\"next\">\r\n              <button type=\"submit\" className=\"btn btn-primary\">\r\n                Submit Details\r\n        </button>\r\n            </li>\r\n          </ul>\r\n\r\n        </div>\r\n\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\nexport default reduxForm({\r\n  form: 'EmployeeBasicDetails',\r\n  destroyOnUnmount: false,\r\n  forceUnregisterOnUnmount: true,\r\n  validate\r\n})(DetailsPreviewForm)","import { reduxForm, Field } from 'redux-form';\r\nimport React from 'react';\r\nimport PrimaryDetailsForm from './PrimaryDetailsForm';\r\nimport ContactDetailsForm from './ContactDetailsForm';\r\nimport DetailsPreviewForm from './DetailsPreviewForm';\r\n\r\nexport default class EmployeeBasicDetails extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.nextPage = this.nextPage.bind(this)\r\n        this.previousPage = this.previousPage.bind(this)\r\n        this.showSubmittedDetails = this.showSubmittedDetails.bind(this)\r\n        this.state = {\r\n            pageNo: 1\r\n        }\r\n    }\r\n    nextPage() {\r\n        this.setState({ pageNo: this.state.pageNo + 1 })\r\n        \r\n    }\r\n\r\n    previousPage() {\r\n        this.setState({ pageNo: this.state.pageNo - 1 })\r\n    }\r\n    showSubmittedDetails(){\r\n        console.log(this.props,'props')\r\n    }\r\n    render() {\r\n        const { pageNo } = this.state;\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                \r\n                <div>\r\n                    {pageNo === 1 && <PrimaryDetailsForm onSubmit={this.nextPage} />}\r\n                    {pageNo === 2 && (\r\n                        <ContactDetailsForm\r\n                            previousPage={this.previousPage}\r\n                            onSubmit={this.nextPage}\r\n                        />\r\n                    )}\r\n                    {pageNo === 3 && (\r\n                        <DetailsPreviewForm\r\n                            previousPage={this.previousPage}\r\n                            onSubmit={this.showSubmittedDetails}\r\n                        />\r\n                    )}\r\n                </div>\r\n                </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport schema from '../applicationSchema.json';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\n\r\nimport EmployeeBasicDetails from '../components/EmployeeBasicDetails';\r\nimport PrimaryDetailsForm from '../components/PrimaryDetailsForm';\r\nimport DetailsPreviewForm from '../components/DetailsPreviewForm';\r\n\r\nimport ContactDetailsForm from '../components/ContactDetailsForm';\r\nexport default class DefaultLayout extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            applicationRoute: schema.applicationRoute\r\n        }\r\n        this.getComponents = this.getComponents.bind(this);\r\n    }\r\n    getComponents() {\r\n        var { applicationRoute } = this.state;\r\n\r\n        applicationRoute.forEach(comp => {\r\n            if (comp.name === \"Employee Basic Details\") {\r\n                comp.component = EmployeeBasicDetails\r\n            }\r\n            else if (comp.name === \"Employee Primary Details\") {\r\n                comp.component = PrimaryDetailsForm\r\n            }\r\n            else if (comp.name === \"Details Preview\") {\r\n                comp.component = DetailsPreviewForm\r\n            }\r\n            else if (comp.name === \"Contact Details\") {\r\n                comp.component = ContactDetailsForm\r\n            }\r\n            else if (comp.redirect) {\r\n                comp.to = \"/dashboard\"\r\n            }\r\n        });\r\n\r\n        this.setState({ applicationRoute: applicationRoute });\r\n    }\r\n    componentDidMount() {\r\n        this.getComponents()\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Switch>\r\n                    {this.state.applicationRoute.map((prop, key) => {\r\n                        if (prop.redirect)\r\n                            return <Redirect from={prop.path} to={prop.to} key={key} />;\r\n                        return <Route path={prop.path} component={prop.component} key={key} />\r\n                    })}\r\n                </Switch>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport './App.css';\nimport EmployeeBasicDetails from './components/EmployeeBasicDetails';\nimport DefaultLayout from './layout/DefaultLayout'\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n      <nav className=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\">\n      <div className='navbar-brand'>\n          <h4>Employee Registration Form</h4>\n        </div>\n      </nav>\n      <Switch>\n\t\t\t\t\t<Route path=\"/\" name=\"Home\" component={DefaultLayout} />\n\t\t\t\t</Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore, combineReducers,applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport { reducer as formReducer } from 'redux-form';\nimport { BrowserRouter } from 'react-router-dom';\nconst rootReducer = combineReducers({\n  form: formReducer,\n});\n\nconst logger = store => next => action => {\n  console.group(action.type)\n  console.info('dispatching', action)\n  let result = next(action)\n  console.log('next state', store.getState())\n  console.groupEnd()\n  return result\n}\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(logger)\n  );\n\nReactDOM.render(\n  <BrowserRouter>\n\t\t<Provider store={store}><App /></Provider>\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}