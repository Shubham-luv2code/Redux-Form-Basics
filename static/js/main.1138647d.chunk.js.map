{"version":3,"sources":["utils/validate.js","utils/renderField.js","components/PrimaryDetailsForm.jsx","components/ContactDetailsForm.jsx","components/DetailsPreviewForm.jsx","Store/Action/actionCreator.js","Store/Action/actionTypes.js","Store/StoreAPI/empRegApi.js","Loader/Loader.jsx","components/AddToUserGroup.jsx","components/EmployeeBasicDetails.jsx","layout/DefaultLayout.jsx","App.js","serviceWorker.js","Store/Reducer/empRegReducer.js","Store/Reducer/rootReducer.js","index.js"],"names":["validate","values","errors","firstName","lastName","email","test","mobileNum","sex","age","Number","acknowledgement","renderField","input","label","type","meta","touched","error","className","placeholder","renderError","reduxForm","form","forceUnregisterOnUnmount","destroyOnUnmount","props","handleSubmit","onSubmit","Field","name","component","placeHolder","value","disabled","allowedAction","previousPage","onClick","getFormValues","htmlFor","id","loaderActionCreator","isLoading","getEmpActionCreator","userGroupData","dispatch","getState","empId","fetch","method","headers","then","response","json","data","status","catch","err","empData","validEmp","undefined","find","x","Promise","resolve","reject","console","log","getUserGroupCreator","splice","userInGroup","Loader","state","show","this","setState","hidden","Spinner","style","width","height","zIndex","position","left","top","color","React","Component","AddToUserGroup","showModal","display","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","EmployeeBasicDetails","enterEmpId","e","debouncedFn","debounce","target","validateEmpId","nextPage","bind","showSubmittedDetails","addToUserGroup","pageNo","isValidated","allSettled","Fragment","onChange","class","connect","reducerReturn","DefaultLayout","applicationRoute","schema","getComponents","forEach","comp","PrimaryDetailsForm","DetailsPreviewForm","ContactDetailsForm","redirect","to","map","prop","key","from","path","App","Boolean","window","location","hostname","match","initState","empDetailsReducer","action","rootReducer","combineReducers","formReducer","empRegReducer","store","createStore","applyMiddleware","thunk","next","group","info","result","groupEnd","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.1138647d.chunk.js","sourcesContent":["const validate = values => {\n    const errors = {}\n    if (!values.firstName) {\n      errors.firstName = 'Required'\n    }\n    if (!values.lastName) {\n      errors.lastName = 'Required'\n    }\n    if (!values.email) {\n      errors.email = 'Required'\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n      errors.email = 'Invalid email address'\n    }\n    if (!values.mobileNum) {\n      errors.mobileNum = 'Required'\n    } else if (!/^([6-9]\\d{9})$/.test(values.mobileNum)) {\n      errors.mobileNum = 'Invalid mobile number, must be 10 digits[Starts with 6-9]'\n    }\n    if (!values.sex) {\n      errors.sex = 'Required'\n    }\n    if (!values.age) {\n      errors.age = 'Required'\n    }\n    else if(Number(values.age) < 18 || Number(values.age) > 60){\n      errors.age = 'Valid Age criteria is 18-60 years'\n    }\n    if (!values.acknowledgement) {\n      errors.acknowledgement   = 'Please accept the declaration'\n    }\n    return errors\n  }\n  \n  export default validate\n  ","import React from 'react'\n\nconst renderField = ({ input, label, type, meta: { touched, error } }) => (\n    <div className='col-md-12 row text-center'>\n        <label className='col-md-3 font-weight-bold'>{label}:</label>\n        <input className='col-md-6 mb-3' {...input} placeholder={label} type={type} />\n        {touched && error && <span className='danger'>{`*${error}`}</span>}\n    </div>\n)\n\nexport default renderField\n","import React from 'react'\nimport { Field, reduxForm } from 'redux-form'\nimport validate from '../utils/validate'\nimport renderField from '../utils/renderField'\nconst renderError = ({ meta: { touched, error } }) =>\n  touched && error ? <span className='danger'>{`*${error}`}</span> : false\nconst PrimaryDetailsForm = props => {\n  const { handleSubmit } = props\n  return (\n    <div className='container-fluid container-margin'>\n      <h4>Employee Primary Details</h4>\n      <form onSubmit={handleSubmit}>\n        <Field\n          name=\"firstName\"\n          type=\"text\"\n          component={renderField}\n          label=\"First Name\"\n\n        />\n        <Field\n          name=\"lastName\"\n          type=\"text\"\n          component={renderField}\n          label=\"Last Name\"\n        />\n        <Field\n          name=\"age\"\n          type=\"number\"\n          component={renderField}\n          label=\"Age\"\n          placeHolder=\"Enter Age\"\n        />\n\n        <div className='col-md-12 row'>\n          <label className='col-md-3'><strong>Gender:</strong></label>\n          <div>\n            <label>\n              <Field\n                name=\"sex\"\n                component=\"input\"\n                type=\"radio\"\n                value=\"male\"\n              />{' '}\n                                        Male\n                                            </label>\n            <label>\n              <Field\n                name=\"sex\"\n                component=\"input\"\n                type=\"radio\"\n                value=\"female\"\n              />{' '}\n                                                Female\n                                </label>\n            <Field name=\"sex\" component={renderError} />\n          </div>\n        </div>\n        <div>\n          <div className=\"col-sm-12\">\n            <ul\n              className=\"form-group row float-sm-right\"\n            >\n              <li className=\"next\">\n                <button type=\"submit\" disabled={!props.allowedAction} className=\"btn btn-primary\">\n                  Next\n        </button>\n              </li>\n            </ul>\n\n          </div>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default reduxForm({\n  form: 'EmployeeBasicDetails',\n  forceUnregisterOnUnmount: true,\n  destroyOnUnmount: false,\n  validate\n})(PrimaryDetailsForm)","import React from 'react'\nimport { Field, reduxForm } from 'redux-form'\nimport validate from '../utils/validate'\nimport renderField from '../utils/renderField'\n\n\n\nconst ContactDetailsForm = props => {\n    const { handleSubmit, previousPage } = props\n    return (\n        <div className='container container-margin'>\n            <h4>Contact Details</h4>\n            <form onSubmit={handleSubmit}>\n                <Field name=\"email\" type=\"email\" component={renderField} label=\"Email\"/>\n                <Field\n                  name=\"mobileNum\"\n                  type=\"text\"\n                  component={renderField}\n                  label=\"Mobile No\"\n                  placeHolder=\"Enter Mobile Number\"\n                />\n\n                <div className=\"col-sm-12\">\n                    <ul\n                        className=\"form-group row float-sm-right\"\n                    >\n                        <li className=\"previous\">\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={previousPage}>\n                        Previous\n        </button>\n                        </li>\n                        <li className=\"next\">\n                        <button type=\"submit\" className=\"btn btn-primary\">\n                        Next/Preview\n        </button>\n                        </li>\n                    </ul>\n\n                </div>\n                {/* <div>\n                    <button type=\"button\" className=\"btn btn-secondary\" onClick={previousPage}>\n                        Previous\n        </button>\n                    <button type=\"submit\" className=\"btn btn-primary\">\n                        Next\n        </button>\n                </div> */}\n            </form>\n        </div>\n    )\n}\n\nexport default reduxForm({\n    form: 'EmployeeBasicDetails', \n    forceUnregisterOnUnmount: true,\n    destroyOnUnmount: false,\n    validate\n})(ContactDetailsForm)\n","import React from 'react'\nimport { Field, reduxForm, formValueSelector, getFormValues } from 'redux-form'\nimport validate from '../utils/validate'\nimport renderField from '../utils/renderField'\n\n// const selector = formValueSelector('EmployeeBasicDetails')\n// const values = selector(state, 'firstName', 'lastName', 'email','sex')\n const values = getFormValues('EmployeeBasicDetails');\n const renderError = ({ meta: { touched, error } }) =>\n  touched && error ? <span className='danger'>{`*${error}`}</span> : false\nconst DetailsPreviewForm = props => {\n  const { onSubmit, handleSubmit, previousPage } = props\n  return (\n    <div className='container container-margin'>\n      <h4>Preview Details</h4>\n      <form onSubmit={handleSubmit}>\n          <div className='col-md-12 row'>\n              <label className='col-md-3 font-weight-bold'>First Name:</label>\n              <Field className='col-md-9' disabled name=\"firstName\" component='input' />\n          </div>\n          <div className='col-md-12 row'>\n              <label className='col-md-3 font-weight-bold'>Last Name:</label>\n              <Field className='col-md-9' disabled name=\"lastName\" component='input' />\n          </div>\n          <div className='col-md-12 row'>\n              <label className='col-md-3 font-weight-bold'>Age:</label>\n              <Field className='col-md-9'  disabled name=\"age\" component='input' />\n          </div>\n          <div className='col-md-12 row'>\n              <label className='col-md-3 font-weight-bold'>Gender:</label>\n              <Field className='col-md-9' disabled name=\"sex\" component='input' />\n          </div>\n          <div className='col-md-12 row'>\n              <label className='col-md-3 font-weight-bold'>Email:</label>\n              <Field className='col-md-9' disabled name=\"email\" component='input' />\n          </div>\n          <div className='col-md-12 row'>\n              <label className='col-md-3 font-weight-bold'>Mobile No:</label>\n              <Field className='col-md-9' disabled name=\"mobileNum\" component='input' />\n          </div>\n\n        <div className='col-md-12 container-margin'>\n          <label htmlFor=\"employed\">\n            <Field\n              name=\"acknowledgement\"\n              id=\"acknowledgement\"\n              component=\"input\"\n              type=\"checkbox\"\n            />&nbsp;\n            <strong>Acknowledgement:</strong>&nbsp;&nbsp;Please confirm above entered details are correct.\n                                            </label>\n                                            <Field name=\"acknowledgement\" component={renderError} />\n        </div>\n        <div className=\"col-sm-12\">\n          <ul\n            className=\"form-group row float-sm-right\"\n          >\n            <li className=\"previous\">\n              <button type=\"button\" className=\"btn btn-secondary\" onClick={previousPage}>\n                Previous\n        </button>\n            </li>\n            <li className=\"next\">\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Submit Details\n        </button>\n            </li>\n          </ul>\n\n        </div>\n\n      </form>\n    </div>\n  )\n}\nexport default reduxForm({\n  form: 'EmployeeBasicDetails',\n  destroyOnUnmount: false,\n  forceUnregisterOnUnmount: true,\n  validate\n})(DetailsPreviewForm)","import {getEmpDetails,getUserGroups} from './../StoreAPI/empRegApi';\nimport {GET_EMP_DETAILS,ERROR_FETCH,LOADER_ACTION_TYPE,USER_GROUP_TYPE} from './actionTypes';\n\nconst loaderActionCreator = (isLoading) => {\n    return {\n        type: LOADER_ACTION_TYPE,\n        isLoading: isLoading\n    };\n};\n\nexport const getEmpActionCreator = (id,userGroupData) => {\n    return (dispatch, getState) => {\n        dispatch(loaderActionCreator(true));\n        return getEmpDetails(id)\n            .then((data) => {\n                if(data.status === 200){\n                    dispatch(loaderActionCreator(false))\n                    dispatch({ type: GET_EMP_DETAILS, empData: data.data,validEmp:true,allowedAction: userGroupData.find(x => x.id == id) === undefined ? false : true})\n                    return Promise.resolve()\n                }\n                else if(data.status >= 400){\n                    dispatch(loaderActionCreator(false))\n                    dispatch({ type: ERROR_FETCH, empData: {} ,validEmp:true,allowedAction: userGroupData.find(x => x.id == id) === undefined ? false : true})\n                    return Promise.reject()\n                }\n            },\n            error =>{\n                console.log(error,'error')\n                dispatch({ type: ERROR_FETCH, empData: {},validEmp:true ,allowedAction: userGroupData.find(x => x.id == id) === undefined ? false : true})\n                return Promise.reject()\n            }\n        )\n            .catch(err => {throw err})\n    }\n}\nexport const getUserGroupCreator = () => {\n    return (dispatch, getState) => {\n        dispatch(loaderActionCreator(true));\n        return getUserGroups()\n            .then((data) => {\n                if(data.status === 200){\n                    dispatch(loaderActionCreator(false))\n                    dispatch({ type: USER_GROUP_TYPE, userGroupData: data.data,userInGroup:true})\n                    return Promise.resolve()\n                }\n                else if(data.status >= 400){\n                    dispatch(loaderActionCreator(false))\n                    dispatch({ type: USER_GROUP_TYPE, userGroupData: {} ,userInGroup:false})\n                    return Promise.reject()\n                }\n            },\n            error =>{\n                console.log(error,'error')\n                dispatch({ type: USER_GROUP_TYPE, userGroupData: {},userInGroup:false })\n                return Promise.reject()\n            }\n        )\n            .catch(err => {throw err})\n    }\n}","export const GET_EMP_DETAILS = 'GET_EMP_DETAILS';\nexport const ERROR_FETCH = 'ERROR_FETCH';\nexport const LOADER_ACTION_TYPE = 'LOADER_ACTION_TYPE';\nexport const USER_GROUP_TYPE = 'USER_GROUP_TYPE';","\n\nexport const getEmpDetails = (empId) => {\n    \n    return fetch(`https://jsonplaceholder.typicode.com/users/${empId}`, {\n        method: 'GET',\n        headers: { 'Content-Type': 'application/json' },\n    })\n    .then(response => response.json().then(data =>({\n        status:response.status,\n        data\n    })))\n        .catch(err => {throw err})\n}\nexport const getUserGroups = () => {\n    \n    return fetch(`https://jsonplaceholder.typicode.com/users`, {\n        method: 'GET',\n        headers: { 'Content-Type': 'application/json' },\n    })\n    .then(response => response.json().then(data =>({\n        status:response.status,\n        data:data.splice(0,5)\n    })))\n        .catch(err => {throw err})\n}","import React from 'react';\nimport { Spinner } from 'reactstrap';\n\nclass Loader extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tshow:false\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif(this.props.show){\n\t\t\tthis.setState({show:this.props.show})\n\t\t}\n\t}\n\n\trender() {\n\n\t\treturn (\n\t\t\t<div hidden={(this.props.show)?false:true}>\n\t\t\t\t<Spinner style={{ width: '3rem', height: '3rem',zIndex: '1000',position: 'absolute',left: '47%',top: '35%'}}  color=\"primary\" />\n\t\t\t\t<div className=\"custom-backdrop\"></div>\n\t\t   </div>\n\t\t);\n\t}\n}\n\nexport default Loader;\n","import React, {useState} from 'react';\nconst AddToUserGroup = (props) => {\n\n    return (\n        <div className={`modal fade ${props.showModal ? 'show' : ''}`} style={props.showModal ? {display:'block'} : {display:'none'}} id=\"exampleModalCenter\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n            <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title\" id=\"exampleModalLongTitle\">Modal title</h5>\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n                    <div className=\"modal-body\">\n                        Any Layout for adding user to group endpoint\n                    </div>\n                    <div className=\"modal-footer\">\n                        <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                        <button type=\"button\" className=\"btn btn-primary\">Save changes</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default AddToUserGroup;\n","import { reduxForm, Field } from 'redux-form';\nimport React from 'react';\nimport PrimaryDetailsForm from './PrimaryDetailsForm';\nimport ContactDetailsForm from './ContactDetailsForm';\nimport DetailsPreviewForm from './DetailsPreviewForm';\nimport {getEmpActionCreator,getUserGroupCreator} from './../Store/Action/actionCreator';\nimport { connect } from 'react-redux';\nimport { debounce } from 'lodash'\nimport Loader from './../Loader/Loader'\nimport AddToUserGroup from './AddToUserGroup'\nimport validate from '../utils/validate'\n//import { Field, reduxForm, formValueSelector, getFormValues } from 'redux-form'\nimport renderField from '../utils/renderField'\nclass EmployeeBasicDetails extends React.Component {\n    constructor(props) {\n        super(props);\n        this.nextPage = this.nextPage.bind(this)\n        this.previousPage = this.previousPage.bind(this)\n        this.showSubmittedDetails = this.showSubmittedDetails.bind(this);\n        this.validateEmpId = this.validateEmpId.bind(this);\n        this.addToUserGroup = this.addToUserGroup.bind(this);\n\n        this.state = {\n            pageNo: 1,\n            empId: '',\n            isValidated: false,\n            showModal: false\n        }\n    }\n    componentDidMount(){\n        this.props.getUserGroupCreator()\n        //console.log(this.props && this.props.reducerReturn && this.props.reducerReturn.empData,'reducerReturn.empData')\n    }\n    addToUserGroup (){\n        if(!this.state.showModal){\n            this.setState({ showModal : !this.state.showModal },()=>{\n                return <AddToUserGroup showModal={this.state.showModal}/>\n            })\n        }\n        \n    }\n    nextPage() {\n        this.setState({ pageNo: this.state.pageNo + 1 })\n    }\n\n    previousPage() {\n        this.setState({ pageNo: this.state.pageNo - 1 })\n    }\n    showSubmittedDetails(){\n        console.log(this.props,'props')\n    }\n    enterEmpId = (e) => {\n        //e.persist();\n        \n        if (!this.debouncedFn) {\n          this.debouncedFn =  debounce(() => {\n            this.setState({empId: e.target.value})\n             let empId = e.target.value;\n             this.validateEmpId(empId)\n          }, 500);\n        }\n        this.debouncedFn();\n    }\n    async validateEmpId(empId){\n        if(empId !== ''){\n            await Promise.allSettled([this.props.getEmpActionCreator(empId,this.props.userGroupData)]).then((data) => {\n                this.setState({isValidated:true});\n            })\n        }\n        else{\n            this.setState({isValidated:false})\n        }\n        \n    }\n    render() {\n        const { pageNo,empId,isValidated } = this.state;\n        return (\n            <React.Fragment>\n                <Loader show={this.props.isLoading}/>\n                <div className='container-fluid container-margin'>\n                <div className=\"card\">\n                <div className=\"card-body\">\n\n                <div className='col-md-12 text-center'>\n                    {/* <label htmlFor='empId' className='col-md-3 font-weight-bold' >Employee ID:</label> */}\n                    {/* <input name='empId' className='col-md-3' disabled={pageNo === 1 ? false : true} placeholder='Enter User ID' onChange={(e)=>{this.enterEmpId(e)}}/> */}\n                    <Field\n                  name=\"empId\"\n                  type=\"text\"\n                  component={renderField}\n                  label=\"Employee ID\"\n                  placeHolder=\"Enter Employee Id\"\n                  onChange={(e)=>{this.enterEmpId(e)}}\n                />\n                    {\n                        isValidated && <span> {this.props.validEmp ? <i className='fa fa-check-circle col-md-3'>&nbsp;Valid Employee</i>: <i className='fa fa-times-circle col-md-3'>&nbsp;Sorry, InValid Employee ID entered!</i>}</span>\n                    }<br/>\n                    <small ><strong>Tip:</strong> Employee ID in user group ranges from 1-5(Rest will have disabled Next)</small>\n                    {   this.props.validEmp && !this.props.allowedAction &&\n                        <button class=\"col-md-3 btn btn-primary\" type=\"button\" onClick={this.addToUserGroup}>Add to User group</button>\n                        \n                    }\n                </div>\n                {this.addToUserGroup()}\n                <div>\n                    {pageNo === 1 && empId !== '' && this.props.validEmp && <PrimaryDetailsForm onSubmit={this.nextPage} allowedAction={this.props.allowedAction}/>}\n                    {pageNo === 2 && (\n                        <ContactDetailsForm\n                            previousPage={this.previousPage}\n                            onSubmit={this.nextPage}\n                        />\n                    )}\n                    {pageNo === 3 && (\n                        <DetailsPreviewForm\n                            previousPage={this.previousPage}\n                            onSubmit={this.showSubmittedDetails}\n                        />\n                    )}\n                </div>\n                </div>\n                </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\nconst mapStateToProps = state => {\n\tconsole.log(state.reducerReturn.empData,\"state.reducerReturn.empData\")\n\treturn {\n        empData: state.reducerReturn.empData,\n        validEmp: state.reducerReturn.validEmp,\n        isLoading: state.reducerReturn.isLoading,\n        userGroupData: state.reducerReturn.userGroupData,\n        allowedAction: state.reducerReturn.allowedAction,\n\t }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getEmpActionCreator: (id,userGroupData) => dispatch(getEmpActionCreator(id,userGroupData)),\n        getUserGroupCreator: () => dispatch(getUserGroupCreator())\n    }\n}\nEmployeeBasicDetails = connect(mapStateToProps, mapDispatchToProps)(EmployeeBasicDetails);\nexport default reduxForm({\n    form: 'EmployeeBasicDetails',\n    destroyOnUnmount: false,\n    forceUnregisterOnUnmount: true,\n    validate\n  })(EmployeeBasicDetails);\n//export default connect(mapStateToProps, mapDispatchToProps)(EmployeeBasicDetails);","import React from 'react';\nimport schema from '../applicationSchema.json';\nimport { Route, Switch, Redirect } from 'react-router-dom';\n\nimport EmployeeBasicDetails from '../components/EmployeeBasicDetails';\nimport PrimaryDetailsForm from '../components/PrimaryDetailsForm';\nimport DetailsPreviewForm from '../components/DetailsPreviewForm';\n\nimport ContactDetailsForm from '../components/ContactDetailsForm';\nexport default class DefaultLayout extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            applicationRoute: schema.applicationRoute\n        }\n        this.getComponents = this.getComponents.bind(this);\n    }\n    getComponents() {\n        var { applicationRoute } = this.state;\n\n        applicationRoute.forEach(comp => {\n            if (comp.name === \"Employee Basic Details\") {\n                comp.component = EmployeeBasicDetails\n            }\n            else if (comp.name === \"Employee Primary Details\") {\n                comp.component = PrimaryDetailsForm\n            }\n            else if (comp.name === \"Details Preview\") {\n                comp.component = DetailsPreviewForm\n            }\n            else if (comp.name === \"Contact Details\") {\n                comp.component = ContactDetailsForm\n            }\n            else if (comp.redirect) {\n                comp.to = \"/dashboard\"\n            }\n        });\n\n        this.setState({ applicationRoute: applicationRoute });\n    }\n    componentDidMount() {\n        this.getComponents()\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <Switch>\n                    {this.state.applicationRoute.map((prop, key) => {\n                        if (prop.redirect)\n                            return <Redirect from={prop.path} to={prop.to} key={key} />;\n                        return <Route path={prop.path} component={prop.component} key={key} />\n                    })}\n                </Switch>\n            </React.Fragment>\n        )\n    }\n}\n","import React from 'react';\nimport { Route, Switch, BrowserRouter } from 'react-router-dom';\nimport './App.css';\nimport EmployeeBasicDetails from './components/EmployeeBasicDetails';\nimport DefaultLayout from './layout/DefaultLayout'\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n      <nav className=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\">\n      <div className='navbar-brand'>\n          <h4>Employee Registration Form</h4>\n        </div>\n      </nav>\n      <BrowserRouter>\n      <Switch>\n\t\t\t\t\t<Route path=\"/\" name=\"Home\" component={DefaultLayout} />\n\t\t\t\t</Switch>\n        </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {GET_EMP_DETAILS,ERROR_FETCH,LOADER_ACTION_TYPE,USER_GROUP_TYPE} from './../Action/actionTypes'\n\nconst initState = {\n    empData: {},\n}\nconst empDetailsReducer = (state = initState, action) => {\n    switch (action.type) {\n        case GET_EMP_DETAILS:\n        return state =  {\n            ...state,\n            empData : action.empData,\n            validEmp: action.validEmp,\n            allowedAction: action.allowedAction\n        }\n        case ERROR_FETCH:\n        return state =  {\n            ...state,\n            empData : action.empData,\n            validEmp: action.validEmp\n        }\n        case USER_GROUP_TYPE:\n        return state =  {\n            ...state,\n            userGroupData : action.userGroupData,\n            allowedAction: action.allowedAction,\n        }\n        case LOADER_ACTION_TYPE:\n        return state =  {\n            ...state,\n            isLoading: action.isLoading\n        }\n        \n\n    default:\n        return state\n    }\n}\n\nexport default empDetailsReducer;","import { combineReducers } from 'redux'\n\nimport empRegReducer from './empRegReducer';\nimport { reducer as formReducer } from 'redux-form';\n\nconst rootReducer = combineReducers({\n    form: formReducer,\n    reducerReturn: empRegReducer,\n})\n\nexport default rootReducer;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore, combineReducers,applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport rootReducer from './Store/Reducer/rootReducer';\nimport thunk from 'redux-thunk';\n\nconst logger = store => next => action => {\n  console.group(action.type)\n  console.info('dispatching', action)\n  let result = next(action)\n  console.log('next state', store.getState())\n  console.groupEnd()\n  return result\n}\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunk,logger)\n  );\n\nReactDOM.render(\n  <BrowserRouter>\n\t\t<Provider store={store}><App /></Provider>\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}